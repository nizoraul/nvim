[[plugins]]
repo = 'Shougo/dein.vim'

# NERDTreeを設定
[[plugins]]
repo = 'scrooloose/nerdtree'

# devicons 利用
[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
'''

# インデント設定
[[plugins]]
repo = 'junegunn/vim-easy-align'

# カラースキーマ
[[plugins]]
repo = 'mrkn/mrkn256.vim'
hook_add = '''
colorscheme mrkn256
syntax enable
'''

# タグジャンプ用タグバー
[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
nmap <F8> :TagbarToggle<CR>
'''

# ステータスライン強化
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
  \ 'colorscheme': 'wombat',
  \ 'separator': { 'left': "", 'right': "" },
  \ 'subseparator': { 'left': "", 'right': "" },
  \ 'component_function': {
  \   'gitbranch': 'LightLineGitBranch',
  \   'readonly': 'LightLineReadonly',
  \   'modified': 'LightLineModified',
  \   'filename': 'LightLineFilename',
  \   'filetype': 'LightLineFiletype',
  \   'fileformat': 'LightLineFileformat',
  \ },
  \ }

let g:lightline.component_type = {
  \     'linter_checking': 'raw',
  \     'linter_warnings': 'warning',
  \     'linter_errors': 'error',
  \     'linter_ok': 'tabsel',
  \ }

let g:lightline.active = {
  \ 'left' : [['mode', 'paste']],
  \ 'right': [['linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ], ['modified', 'readonly', 'filename', 'gitbranch'], [ 'fileformat', 'fileencoding', 'filetype' ]] }

function! LightLineModified()
    if &filetype == "help"
        return ""
    elseif &modified
        return "+"
    elseif &modifiable
        return ""
    else
        return ""
    endif
endfunction

function! LightLineReadonly()
    if &filetype == "help"
        return ""
    elseif &readonly
        return ""
    else
        return ""
    endif
endfunction

function! LightLineGitBranch()
  return ''.gina#component#repo#branch() 
endfunction

function! LightLineFilename()
    return ('' != LightLineReadonly() ? LightLineReadonly() . ' ' : '') .
                \ ('' != expand('%:t') ? expand('%:t') : '[No Name]') .
                \ ('' != LightLineModified() ? ' ' . LightLineModified() : '')
endfunction

function! LightLineFiletype()
  return winwidth(0) > 70 ? (strlen(&filetype) ? &filetype . ' ' . WebDevIconsGetFileTypeSymbol() : 'no ft') : ''
endfunction

function! LightLineFileformat()
  return winwidth(0) > 70 ? (&fileformat . ' ' . WebDevIconsGetFileFormatSymbol()) : ''
endfunction
'''

# インデント可視化
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
" Vim
let g:indentLine_color_term = 239

" GVim
let g:indentLine_color_gui = '#A4E57E'

" none X terminal
let g:indentLine_color_tty_light = 7 " (default: 4)
let g:indentLine_color_dark = 1 " (default: 2)

" Background (Vim, GVim)
" let g:indentLine_bgcolor_term = 202
" let g:indentLine_bgcolor_gui = '#FF5F00'

let g:indentLine_char_list = ['|', '¦', '┆', '┊']

'''

# コード補完 coc
[[plugins]]
repo = 'neoclide/coc.nvim'
build = 'coc#util#install()'

